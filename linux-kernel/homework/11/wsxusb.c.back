#include <linux/module.h>
#include <linux/kernel.h>
#include <linux/init.h>
#include <linux/device.h>
#include <linux/fs.h>
#include <linux/kref.h>

MODULE_AUTHOR("Cecil Wang");
MODULE_LICENSE("GPL");

#define DEBUG

#define info(fmt, args...) \
	pr_info("WSXUSB :  " fmt, ##args)


//struct usb_class{
//	struct kref kref;
//	struct class *class;
//};

int device_id;
struct device* mydevice = NULL;
struct class *usb_class = (struct class *)0xffffffff81fc0180;

ssize_t device_read(struct file* f, char __user *buffer, 
		    size_t length, loff_t* offset){

	return 0;
}

ssize_t device_write(struct file* f, const char __user *buffer, 
		    size_t length, loff_t* offset){

	return 0;
}

int device_open(struct inode* inode, struct file* f){


	return 0;
}

int device_release(struct inode* inode, struct file* f){


	return 0;
}

struct file_operations fops = {
	.read = device_read,
	.write = device_write,
	.open = device_open,
	.release = device_release
};

int __init usb_module_init(void){
	info("\n---------  HELLO  --------\n");


	device_id = register_chrdev(0, "wsxusb", &fops);
	if(device_id < 0){
		info("fail to register device\n");
		return -1;
	}

	info("%s\n", usb_class->name);
	//struct usb_class *usb_class = (struct usb_class *)0xffffffff81fc0180;
	mydevice = device_create(usb_class, NULL, MKDEV(device_id,214), NULL, "1-1:1.0");
	if(IS_ERR(mydevice)){
		info("fail to creat device\n");
		unregister_chrdev(device_id, "wsxusb");
		return -1;
	}
	
	return 0;
}

void __exit usb_module_exit(void){

}

module_init(usb_module_init);
module_exit(usb_module_exit);
